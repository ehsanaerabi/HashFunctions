<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\_build\nrf51422_xxac.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\_build\nrf51422_xxac.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060528: Last Updated: Wed Jul 18 08:38:43 2018
<BR><P>
<H3>Maximum Stack Usage =       2368 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; crypto_hash &rArr; Squeeze &rArr; PadAndSwitchToSqueezingPhase &rArr; AbsorbQueue &rArr; KeccakAbsorb832bits &rArr; KeccakPermutationOnWordsAfterXoring832bits
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[c]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">ADC_IRQHandler</a><BR>
 <LI><a href="#[24]">__asm___11_nrf_delay_c_532987f3__nrf_delay_us</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">__asm___11_nrf_delay_c_532987f3__nrf_delay_us</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[c]">ADC_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[14]">CCM_AAR_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[13]">ECB_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[b]">GPIOTE_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[18]">LPCOMP_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[6]">POWER_CLOCK_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[17]">QDEC_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[7]">RADIO_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[12]">RNG_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[10]">RTC0_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[16]">RTC1_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[9]">SPI0_TWI0_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[a]">SPI1_TWI1_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[19]">SWI0_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1a]">SWI1_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1b]">SWI2_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1c]">SWI3_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1d]">SWI4_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1e]">SWI5_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[20]">SystemInit</a> from system_nrf51.o(i.SystemInit) referenced from arm_startup_nrf51.o(.text)
 <LI><a href="#[11]">TEMP_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[d]">TIMER0_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[e]">TIMER1_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[f]">TIMER2_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[8]">UART0_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[15]">WDT_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[21]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from arm_startup_nrf51.o(.text)
 <LI><a href="#[1f]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[21]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(.text)
</UL>
<P><STRONG><a name="[4d]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[22]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2c]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[4e]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[4f]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[50]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[51]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[52]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[24]"></a>__asm___11_nrf_delay_c_532987f3__nrf_delay_us</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, nrf_delay.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_nrf_delay_c_532987f3__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_nrf_delay_c_532987f3__nrf_delay_us
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>CCM_AAR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>ECB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>GPIOTE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>LPCOMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>POWER_CLOCK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>QDEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>RADIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>RTC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>RTC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SPI0_TWI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SPI1_TWI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SWI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SWI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SWI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SWI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SWI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>SWI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TEMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Absorb
</UL>

<P><STRONG><a name="[28]"></a>__aeabi_lmul</STRONG> (Thumb, 122 bytes, Stack size 64 bytes, llmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_lmul &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Absorb
</UL>

<P><STRONG><a name="[53]"></a>_ll_mul</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, llmul.o(.text), UNUSED)

<P><STRONG><a name="[35]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Squeeze
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Absorb
</UL>

<P><STRONG><a name="[54]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[55]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[2a]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[56]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[57]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[29]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PadAndSwitchToSqueezingPhase
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakInitializeState
</UL>

<P><STRONG><a name="[3a]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PadAndSwitchToSqueezingPhase
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSponge
</UL>

<P><STRONG><a name="[58]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2b]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[27]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[59]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[26]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[5a]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[23]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[5b]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[2d]"></a>Absorb</STRONG> (Thumb, 658 bytes, Stack size 56 bytes, keccaksponge.o(i.Absorb))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = Absorb &rArr; AbsorbQueue &rArr; KeccakAbsorb832bits &rArr; KeccakPermutationOnWordsAfterXoring832bits
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AbsorbQueue
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakAbsorb832bits
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakAbsorb576bits
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakAbsorb1344bits
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakAbsorb1152bits
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakAbsorb1088bits
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakAbsorb1024bits
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakAbsorb
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crypto_hash
</UL>

<P><STRONG><a name="[36]"></a>AbsorbQueue</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, keccaksponge.o(i.AbsorbQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = AbsorbQueue &rArr; KeccakAbsorb832bits &rArr; KeccakPermutationOnWordsAfterXoring832bits
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakAbsorb832bits
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakAbsorb576bits
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakAbsorb1344bits
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakAbsorb1152bits
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakAbsorb1088bits
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakAbsorb1024bits
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakAbsorb
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PadAndSwitchToSqueezingPhase
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Absorb
</UL>

<P><STRONG><a name="[37]"></a>InitSponge</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, keccaksponge.o(i.InitSponge))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = InitSponge &rArr; KeccakInitializeState
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakInitializeState
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakInitialize
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crypto_hash
</UL>

<P><STRONG><a name="[34]"></a>KeccakAbsorb</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, keccakf-1600-opt32.o(i.KeccakAbsorb))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = KeccakAbsorb &rArr; KeccakPermutationOnWordsAfterXoring
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakPermutationOnWordsAfterXoring
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AbsorbQueue
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Absorb
</UL>

<P><STRONG><a name="[30]"></a>KeccakAbsorb1024bits</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, keccakf-1600-opt32.o(i.KeccakAbsorb1024bits))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = KeccakAbsorb1024bits &rArr; KeccakPermutationOnWordsAfterXoring1024bits
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakPermutationOnWordsAfterXoring1024bits
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AbsorbQueue
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Absorb
</UL>

<P><STRONG><a name="[31]"></a>KeccakAbsorb1088bits</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, keccakf-1600-opt32.o(i.KeccakAbsorb1088bits))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = KeccakAbsorb1088bits &rArr; KeccakPermutationOnWordsAfterXoring1088bits
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakPermutationOnWordsAfterXoring1088bits
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AbsorbQueue
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Absorb
</UL>

<P><STRONG><a name="[32]"></a>KeccakAbsorb1152bits</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, keccakf-1600-opt32.o(i.KeccakAbsorb1152bits))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = KeccakAbsorb1152bits &rArr; KeccakPermutationOnWordsAfterXoring1152bits
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakPermutationOnWordsAfterXoring1152bits
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AbsorbQueue
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Absorb
</UL>

<P><STRONG><a name="[33]"></a>KeccakAbsorb1344bits</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, keccakf-1600-opt32.o(i.KeccakAbsorb1344bits))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = KeccakAbsorb1344bits &rArr; KeccakPermutationOnWordsAfterXoring1344bits
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakPermutationOnWordsAfterXoring1344bits
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AbsorbQueue
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Absorb
</UL>

<P><STRONG><a name="[2e]"></a>KeccakAbsorb576bits</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, keccakf-1600-opt32.o(i.KeccakAbsorb576bits))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = KeccakAbsorb576bits &rArr; KeccakPermutationOnWordsAfterXoring576bits
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakPermutationOnWordsAfterXoring576bits
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AbsorbQueue
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Absorb
</UL>

<P><STRONG><a name="[2f]"></a>KeccakAbsorb832bits</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, keccakf-1600-opt32.o(i.KeccakAbsorb832bits))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = KeccakAbsorb832bits &rArr; KeccakPermutationOnWordsAfterXoring832bits
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakPermutationOnWordsAfterXoring832bits
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AbsorbQueue
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Absorb
</UL>

<P><STRONG><a name="[42]"></a>KeccakExtract</STRONG> (Thumb, 30 bytes, Stack size 20 bytes, keccakf-1600-opt32.o(i.KeccakExtract))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = KeccakExtract &rArr; setInterleavedWordsInto8bytes &rArr; fromInterleaving
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInterleavedWordsInto8bytes
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PadAndSwitchToSqueezingPhase
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Squeeze
</UL>

<P><STRONG><a name="[44]"></a>KeccakExtract1024bits</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, keccakf-1600-opt32.o(i.KeccakExtract1024bits))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = KeccakExtract1024bits &rArr; setInterleavedWordsInto8bytes &rArr; fromInterleaving
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInterleavedWordsInto8bytes
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PadAndSwitchToSqueezingPhase
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Squeeze
</UL>

<P><STRONG><a name="[38]"></a>KeccakInitialize</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, keccakf-1600-opt32.o(i.KeccakInitialize))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSponge
</UL>

<P><STRONG><a name="[39]"></a>KeccakInitializeState</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, keccakf-1600-opt32.o(i.KeccakInitializeState))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = KeccakInitializeState
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSponge
</UL>

<P><STRONG><a name="[45]"></a>KeccakPermutation</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, keccakf-1600-opt32.o(i.KeccakPermutation))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = KeccakPermutation &rArr; KeccakPermutationOnWords
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakPermutationOnWords
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Squeeze
</UL>

<P><STRONG><a name="[46]"></a>KeccakPermutationOnWords</STRONG> (Thumb, 3182 bytes, Stack size 372 bytes, keccakf-1600-opt32.o(i.KeccakPermutationOnWords))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = KeccakPermutationOnWords
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakPermutation
</UL>

<P><STRONG><a name="[3b]"></a>KeccakPermutationOnWordsAfterXoring</STRONG> (Thumb, 3354 bytes, Stack size 372 bytes, keccakf-1600-opt32.o(i.KeccakPermutationOnWordsAfterXoring))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = KeccakPermutationOnWordsAfterXoring
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakAbsorb
</UL>

<P><STRONG><a name="[3c]"></a>KeccakPermutationOnWordsAfterXoring1024bits</STRONG> (Thumb, 3366 bytes, Stack size 372 bytes, keccakf-1600-opt32.o(i.KeccakPermutationOnWordsAfterXoring1024bits))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = KeccakPermutationOnWordsAfterXoring1024bits
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakAbsorb1024bits
</UL>

<P><STRONG><a name="[3d]"></a>KeccakPermutationOnWordsAfterXoring1088bits</STRONG> (Thumb, 3366 bytes, Stack size 372 bytes, keccakf-1600-opt32.o(i.KeccakPermutationOnWordsAfterXoring1088bits))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = KeccakPermutationOnWordsAfterXoring1088bits
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakAbsorb1088bits
</UL>

<P><STRONG><a name="[3e]"></a>KeccakPermutationOnWordsAfterXoring1152bits</STRONG> (Thumb, 3366 bytes, Stack size 372 bytes, keccakf-1600-opt32.o(i.KeccakPermutationOnWordsAfterXoring1152bits))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = KeccakPermutationOnWordsAfterXoring1152bits
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakAbsorb1152bits
</UL>

<P><STRONG><a name="[3f]"></a>KeccakPermutationOnWordsAfterXoring1344bits</STRONG> (Thumb, 3366 bytes, Stack size 372 bytes, keccakf-1600-opt32.o(i.KeccakPermutationOnWordsAfterXoring1344bits))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = KeccakPermutationOnWordsAfterXoring1344bits
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakAbsorb1344bits
</UL>

<P><STRONG><a name="[40]"></a>KeccakPermutationOnWordsAfterXoring576bits</STRONG> (Thumb, 3366 bytes, Stack size 372 bytes, keccakf-1600-opt32.o(i.KeccakPermutationOnWordsAfterXoring576bits))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = KeccakPermutationOnWordsAfterXoring576bits
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakAbsorb576bits
</UL>

<P><STRONG><a name="[41]"></a>KeccakPermutationOnWordsAfterXoring832bits</STRONG> (Thumb, 3366 bytes, Stack size 372 bytes, keccakf-1600-opt32.o(i.KeccakPermutationOnWordsAfterXoring832bits))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = KeccakPermutationOnWordsAfterXoring832bits
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakAbsorb832bits
</UL>

<P><STRONG><a name="[47]"></a>PadAndSwitchToSqueezingPhase</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, keccaksponge.o(i.PadAndSwitchToSqueezingPhase))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = PadAndSwitchToSqueezingPhase &rArr; AbsorbQueue &rArr; KeccakAbsorb832bits &rArr; KeccakPermutationOnWordsAfterXoring832bits
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AbsorbQueue
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakExtract1024bits
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakExtract
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Squeeze
</UL>

<P><STRONG><a name="[48]"></a>Squeeze</STRONG> (Thumb, 176 bytes, Stack size 48 bytes, keccaksponge.o(i.Squeeze))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = Squeeze &rArr; PadAndSwitchToSqueezingPhase &rArr; AbsorbQueue &rArr; KeccakAbsorb832bits &rArr; KeccakPermutationOnWordsAfterXoring832bits
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PadAndSwitchToSqueezingPhase
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakPermutation
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakExtract1024bits
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakExtract
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crypto_hash
</UL>

<P><STRONG><a name="[20]"></a>SystemInit</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, system_nrf51.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_manual_peripheral_setup_needed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(.text)
</UL>
<P><STRONG><a name="[5c]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[5d]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[5e]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[4a]"></a>crypto_hash</STRONG> (Thumb, 62 bytes, Stack size 440 bytes, main.o(i.crypto_hash))
<BR><BR>[Stack]<UL><LI>Max Depth = 896<LI>Call Chain = crypto_hash &rArr; Squeeze &rArr; PadAndSwitchToSqueezingPhase &rArr; AbsorbQueue &rArr; KeccakAbsorb832bits &rArr; KeccakPermutationOnWordsAfterXoring832bits
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Squeeze
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSponge
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Absorb
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4c]"></a>fromInterleaving</STRONG> (Thumb, 160 bytes, Stack size 8 bytes, keccakf-1600-opt32.o(i.fromInterleaving))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fromInterleaving
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setInterleavedWordsInto8bytes
</UL>

<P><STRONG><a name="[1f]"></a>main</STRONG> (Thumb, 104 bytes, Stack size 1472 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 2368<LI>Call Chain = main &rArr; crypto_hash &rArr; Squeeze &rArr; PadAndSwitchToSqueezingPhase &rArr; AbsorbQueue &rArr; KeccakAbsorb832bits &rArr; KeccakPermutationOnWordsAfterXoring832bits
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crypto_hash
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[4b]"></a>nrf_delay_ms</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, nrf_delay.o(i.nrf_delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_nrf_delay_c_532987f3__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[43]"></a>setInterleavedWordsInto8bytes</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, keccakf-1600-opt32.o(i.setInterleavedWordsInto8bytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = setInterleavedWordsInto8bytes &rArr; fromInterleaving
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fromInterleaving
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakExtract1024bits
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeccakExtract
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[49]"></a>is_manual_peripheral_setup_needed</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, system_nrf51.o(i.is_manual_peripheral_setup_needed))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
